[[plugins]]
repo = 'zchee/deoplete-zsh'
on_ft = ['zsh', 'sh']


[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
# on_event = 'InsertEnter'
hook_source = '''
source $CONFIG/nvim/plugins/deoplete.rc.vim
call deoplete#enable()
'''
on_i = 1


[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
# on_event = 'InsertCharPre'
on_ft = 'snippet'
on_i = 1
hook_source = '''
  let g:neosnippet#enable_snipmate_compatibility = 1
  let g:neosnippet#enable_completed_snippet = 1
  " let g:neosnippet#enable_complete_done = 1
  let g:neosnippet#expand_word_boundary = 1
  let g:neosnippet#snippets_directory = '~/.vim/snippets'

  " For conceal markers.
  if has('conceal')
		set conceallevel=2 concealcursor=niv
	endif
'''


[[plugins]]
repo = 'Shougo/neosnippet-snippets'


[[plugins]]
repo = 'Shougo/context_filetype.vim'


[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'context_filetype.vim'


# [[plugins]]
# repo = 'inkarkat/vim-SyntaxRange'
# hook_source = '''
# function! s:syntax_range_dein() abort
#   let start = '^\s*hook_\%('.
#   \           'add\|source\|post_source\|post_update'.
#   \           '\)\s*=\s*%s'
# 
#   call SyntaxRange#Include(printf(start, "'''"), "'''", 'vim', '')
#   call SyntaxRange#Include(printf(start, '"""'), '"""', 'vim', '')
# endfunction
# call s:syntax_range_dein()
# '''


[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'


[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'


[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'
